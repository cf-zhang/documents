@startuml
'https://plantuml.com/class-diagram

namespace nav2_lifecycle_manager{
enum SystemStatus{
ACTIVE,
INACTIVE,
TIMEOUT
}

class LifecycleManagerClient{
-- public method --
explicit LifecycleManagerClient(const std::string & name);
bool startup(const std::chrono::nanoseconds timeout = std::chrono::nanoseconds(-1));
bool shutdown(const std::chrono::nanoseconds timeout = std::chrono::nanoseconds(-1));
bool pause(const std::chrono::nanoseconds timeout = std::chrono::nanoseconds(-1));
bool resume(const std::chrono::nanoseconds timeout = std::chrono::nanoseconds(-1));
bool reset(const std::chrono::nanoseconds timeout = std::chrono::nanoseconds(-1));
SystemStatus is_active(const std::chrono::nanoseconds timeout = std::chrono::nanoseconds(-1));
void set_initial_pose(double x, double y, double theta);
bool navigate_to_pose(double x, double y, double theta);
-- protected method --
bool callService(command,timeout)
-- protected data --
using ManageLifecycleNodes = nav2_msgs::srv::ManageLifecycleNodes;
rclcpp::Node::SharedPtr node_;
rclcpp::Client<ManageLifecycleNodes>::SharedPtr manager_client_;
rclcpp::Client<std_srvs::srv::Trigger>::SharedPtr is_active_client_;
std::string manage_service_name_;
std::string active_service_name_;

}



}
@enduml