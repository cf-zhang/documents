@startuml
namespace teb_local_planner.distance{
class distance{
-- public method --
inline Eigen::Vector2d closest_point_on_line_segment_2d()
inline double distance_point_to_segment_2d()
inline bool check_line_segments_intersection_2d()
inline double distance_segment_to_segment_2d()
inline double distance_point_to_polygon_2d()
inline double distance_segment_to_polygon_2d()
inline double distance_polygon_to_polygon_2d()
inline double calc_distance_line_to_line_3d()
inline double calc_distance_segment_to_segment3D()
double calc_closest_point_to_approach_time()
double calc_closest_point_to_approach_distance()
double calc_distance_point_to_line()
double calc_distance_point_to_segment()
}
}

namespace teb_local_planner.misc{
enum RotType
{
 left
 none
 right
}
class misc{
-- public method --
inline bool is_close(a, b, epsilon)
inline double average_angles(angles)
inline bool smaller_than_abs(i, j)
inline double fast_sigmoid(x)
inline double distance_points2d(point1, point2)
inline double cross2d(v1, v2)
inline const T& get_const_reference(ptr)
}
}


@enduml